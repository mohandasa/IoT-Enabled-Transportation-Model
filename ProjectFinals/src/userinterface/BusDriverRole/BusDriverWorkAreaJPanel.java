/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.BusDriverRole;

import Business.Bus.Bus;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.PassengerAdminEnterprise;
import Business.Network.Network;
import Business.Organization.BusDriverOrganization;
import Business.Organization.Organization;
import Business.Organization.PassengerOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.BusAdminWorkRequest;
import Business.WorkQueue.WorkRequest;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.PassengerRole.EmailJPanel;
import userinterface.common.NotificationsJPanel;

/**
 *
 * @author anita
 */
public class BusDriverWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form BusDriverWorkAreaJPanel
     */
     private JPanel userProcessContainer;
      private UserAccount userAccount;
       private Enterprise enterprise;
        private BusDriverOrganization organization;
        private EcoSystem business;
    public BusDriverWorkAreaJPanel(JPanel userProcessContainer, UserAccount account,BusDriverOrganization organization,Enterprise enterprise,EcoSystem business) {
        initComponents();
         this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
         this.enterprise = enterprise;
         this.organization=(BusDriverOrganization)organization;
         this.business=business;
         populateTable();
    }
public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        model.setRowCount(0);
        for(int i=0;i<organization.getWorkQueue().getWorkRequestList().size();i++){
        WorkRequest request=organization.getWorkQueue().getWorkRequestList().get(i);
            
          //   ArrayList <Bus> bus= ((BusDriverWorkRequest)request).getBusDirectory().getBusList();
                Bus b=((BusAdminWorkRequest)request).getBus();
      //  for(Bus b:bus){
                Object[] row = new Object[7];
                
                row[3]=b;
                row[1]=b.getBusSource();
                row[2]=b.getBusDestination();
                row[4]=b.getCost();
                row[0] = request;
                row[5] = request.getStatus();
                row[6]=i;
            
            
             model.addRow(row);
        //    }
           
        }
           
        
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        assignJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        sendNotificationJButton = new javax.swing.JButton();
        emailjButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Sender", "Bus Source", "Bus Destination", "Bus Name", "Cost", "Status", "Request ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);
        if (workRequestJTable.getColumnModel().getColumnCount() > 0) {
            workRequestJTable.getColumnModel().getColumn(5).setResizable(false);
        }

        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 102));
        jLabel1.setText("Bus Information:-");

        sendNotificationJButton.setText("Send Notification");
        sendNotificationJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendNotificationJButtonActionPerformed(evt);
            }
        });

        emailjButton.setText("Send Email");
        emailjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(assignJButton)
                        .addGap(18, 18, 18)
                        .addComponent(refreshJButton)
                        .addGap(18, 18, 18)
                        .addComponent(sendNotificationJButton)
                        .addGap(18, 18, 18)
                        .addComponent(emailjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(133, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignJButton)
                    .addComponent(refreshJButton)
                    .addComponent(sendNotificationJButton)
                    .addComponent(emailjButton))
                .addGap(155, 155, 155))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

            
        int selectedRow = workRequestJTable.getSelectedRow();
//       int i=(Integer)workRequestJTable.getValueAt(selectedRow, 0);
        
        if (selectedRow < 0){
            return;
        }
        //WorkRequest request=organization.getWorkQueue().getWorkRequestList().get(i);

         WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
        
        request.setReceiver(userAccount);

        //int i=(Integer)workRequestJTable.getValueAt(selectedRow, 6);
        
        request.setStatus("Completed");
        

        populateTable();
        
        
        
        Enterprise ent=null;
        for (Network network: business.getNetworkList()){
            for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseList()){
                if(enterprise instanceof PassengerAdminEnterprise){
                    ent = enterprise;
        }
        }
        }
        
        
        Organization org = null;
       // Enterprise ent = (PassengerAdminEnterprise)enterprise;
        
        
        for (Organization organization : ent.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof PassengerOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(request);
            userAccount.getWorkQueue().getWorkRequestList().add(request);
        }
        JOptionPane.showMessageDialog(null,"Request added to the passenger","Information",JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_assignJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void sendNotificationJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendNotificationJButtonActionPerformed
        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            return;
        }

        BusAdminWorkRequest request = (BusAdminWorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
        Bus bus = request.getBus();
        String notificationCategory = String.format("bus.%s-%s.driver", bus.getBusId(), bus.getBusName());
        userProcessContainer.add("sendBusDriverNotificationJPanel", new NotificationsJPanel(userProcessContainer, business, notificationCategory));
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_sendNotificationJButtonActionPerformed

    private void emailjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailjButtonActionPerformed
        EmailJPanel ejp = new EmailJPanel(userProcessContainer);

        userProcessContainer.add("EmailJPanel",ejp );
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_emailjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton emailjButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton sendNotificationJButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
