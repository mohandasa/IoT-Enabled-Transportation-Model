/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PassengerRole;

import Business.Bus.Bus;
import Business.EcoSystem;
import Business.EcoSystem.Notification;
import Business.Employee.Employee;
import Business.Organization.PassengerOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.BusAdminWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anita
 */
public class BusAssignPassengerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form BusAssignPassengerJPanel
     */
     private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private PassengerOrganization passengerOrganization;
   
    
    public BusAssignPassengerJPanel(JPanel userProcessContainer, UserAccount account,PassengerOrganization passengerOrganization , EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.passengerOrganization=passengerOrganization;
        
          populateTable();
        
    }
    
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        
        model.setRowCount(0);
        for(WorkRequest request : passengerOrganization.getWorkQueue().getWorkRequestList()){
            
             if (request instanceof BusAdminWorkRequest){
           
            Object[] row = new Object[7];
            row[0] = request;
            row[1] = request.getSender().getEmployee().getName();
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[3] = request.getStatus();
            Bus bus = ((BusAdminWorkRequest)request).getBus();
            row[4] = bus.getBusName();
            row[5] = bus.getNosSeat();
            row[6] = bus.getAvailSeat();
            
            model.addRow(row);
             }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bookSeatJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        viewBusjButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        sourceBjTextField = new javax.swing.JTextField();
        destBjTextField = new javax.swing.JTextField();
        costjTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        startDatejTextField = new javax.swing.JTextField();
        endDatejTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        typejTextField = new javax.swing.JTextField();
        notificationsjLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        notificationsJTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        backjButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        bookSeatJButton.setText("Book Seat");
        bookSeatJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookSeatJButtonActionPerformed(evt);
            }
        });

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("Bus Information:-");

        viewBusjButton.setText("View");
        viewBusjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBusjButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Bus Details");

        jLabel3.setText("Source");

        jLabel4.setText("Destination");

        jLabel5.setText("Cost");

        sourceBjTextField.setEditable(false);

        destBjTextField.setEditable(false);

        costjTextField.setEditable(false);

        jLabel6.setText("Start Date");

        jLabel7.setText("End Date");

        startDatejTextField.setEditable(false);

        endDatejTextField.setEditable(false);

        jLabel8.setText("Type");

        typejTextField.setEditable(false);

        notificationsjLabel.setText("Notifications");

        notificationsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "DateTime", "Type", "Message"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(notificationsJTable);
        if (notificationsJTable.getColumnModel().getColumnCount() > 0) {
            notificationsJTable.getColumnModel().getColumn(0).setMinWidth(150);
            notificationsJTable.getColumnModel().getColumn(0).setPreferredWidth(150);
            notificationsJTable.getColumnModel().getColumn(0).setMaxWidth(150);
            notificationsJTable.getColumnModel().getColumn(1).setMinWidth(100);
            notificationsJTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            notificationsJTable.getColumnModel().getColumn(1).setMaxWidth(100);
            notificationsJTable.getColumnModel().getColumn(2).setMinWidth(450);
            notificationsJTable.getColumnModel().getColumn(2).setPreferredWidth(450);
            notificationsJTable.getColumnModel().getColumn(2).setMaxWidth(450);
        }

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Admin Name", "Bus Driver", "Status", "Bus", "Total Seats", "Available"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(workRequestJTable);

        backjButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        backjButton1.setText("<< Back");
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon("C:\\Users\\anita\\Desktop\\Project\\bus.png")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5)
                                            .addComponent(notificationsjLabel))
                                        .addGap(218, 218, 218)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(costjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(destBjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(sourceBjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(59, 59, 59)
                                        .addComponent(backjButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(bookSeatJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(refreshJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(34, 34, 34)
                                        .addComponent(viewBusjButton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(39, 39, 39)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel6)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel8)
                                                .addComponent(jLabel7)))
                                        .addGap(37, 37, 37)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(endDatejTextField)
                                            .addComponent(typejTextField)
                                            .addComponent(startDatejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 773, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(40, 40, 40)
                                .addComponent(jLabel9)))))
                .addContainerGap(112, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookSeatJButton)
                    .addComponent(refreshJButton)
                    .addComponent(viewBusjButton)
                    .addComponent(backjButton1))
                .addGap(32, 32, 32)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(sourceBjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(startDatejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(destBjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(endDatejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(costjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(typejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(notificationsjLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bookSeatJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookSeatJButtonActionPerformed
        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            return;
        }

        WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
        Bus bus = ((BusAdminWorkRequest)request).getBus();
        if (hasAlreadyBooked(bus)) {
            System.out.println("you have already booked a seat on this bus!");
  JOptionPane.showMessageDialog(null, "You have already booked a seat on this bus", "Seat Booked",JOptionPane.INFORMATION_MESSAGE);

            
        } else if (bus.getAvailSeat() == 0) {
            System.out.println("No seats available on this bus!");
 JOptionPane.showMessageDialog(null, "No seats Available on this bus", "No seats available",JOptionPane.INFORMATION_MESSAGE);

        } else {
            bus.getBookedPassengerDirectory().getEmployeeList().add(this.userAccount.getEmployee());
            updateBookingStats();
            populateTable();
        }
    }//GEN-LAST:event_bookSeatJButtonActionPerformed

    private boolean hasAlreadyBooked(Bus bus) {
        for (Employee passenger: bus.getBookedPassengerDirectory().getEmployeeList()) {
            if (passenger.getId() == this.userAccount.getEmployee().getId()) {
                return true;
            }
        }
        return false;
    }
    
    private void updateBookingStats() {
        Map<String, Object> stats = this.business.getStats("stats.bookings");
        Integer count;
        if ((count = (Integer) stats.get("passenger.count.bus")) == null) {
            count = 0;
        }
        stats.put("passenger.count.bus", ++count);
    }
    
    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void viewBusjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBusjButtonActionPerformed
      
         int selectedRow =workRequestJTable.getSelectedRow();
     if (selectedRow < 0){
        return;
     }
 
        WorkRequest request =  (WorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
   System.out.println(request.getReceiver());
    BusAdminWorkRequest busAdminWorkRequest = (BusAdminWorkRequest) request;
     sourceBjTextField.setText(busAdminWorkRequest.getBus().getBusSource());
     destBjTextField.setText(busAdminWorkRequest.getBus().getBusDestination());
     typejTextField.setText(busAdminWorkRequest.getBus().getBusType());
     costjTextField.setText(String.valueOf(busAdminWorkRequest.getBus().getCost()));
     startDatejTextField.setText(String.valueOf(busAdminWorkRequest.getBus().getStartDate()));
     endDatejTextField.setText(String.valueOf(busAdminWorkRequest.getBus().getEndDate()));
        
        populateNotificationsTable(busAdminWorkRequest.getBus());
        
    }//GEN-LAST:event_viewBusjButtonActionPerformed

    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed
        // TODO add your handling code here:

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton1ActionPerformed

    private void populateNotificationsTable(Bus bus) {
        DefaultTableModel model = (DefaultTableModel) notificationsJTable.getModel();
        model.setRowCount(0);
        
        String notificationCategory = String.format("bus.%s-%s.driver", bus.getBusId(), bus.getBusName());
        List<Notification> notifications = this.business.getNotifications(notificationCategory);
        Collections.sort(notifications, new Comparator<Notification>() {
            @Override
            public int compare(Notification n1, Notification n2) {
                // desc order
                return -1*n1.getDate().compareTo(n2.getDate());
            }
        });
        for(Notification notification : notifications) {
            Object[] row = new Object[3];
            row[0] = notification.getDateAsString();
            row[1] = notification.getType();
            row[2] = notification.getMessage();
            model.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton1;
    private javax.swing.JButton bookSeatJButton;
    private javax.swing.JTextField costjTextField;
    private javax.swing.JTextField destBjTextField;
    private javax.swing.JTextField endDatejTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable notificationsJTable;
    private javax.swing.JLabel notificationsjLabel;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JTextField sourceBjTextField;
    private javax.swing.JTextField startDatejTextField;
    private javax.swing.JTextField typejTextField;
    private javax.swing.JButton viewBusjButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
