/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PassengerRole;

import Business.Car.Car;
import Business.EcoSystem;
import Business.Organization.CarDriverOrganization;


import Business.Organization.Organization;
import Business.Organization.PassengerOrganization;
import Business.Train.Train;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CarDriverWorkRequest;
import Business.WorkQueue.CarTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Map;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class PassengerAssignJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private PassengerOrganization passengerOrganization;
    
    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    public PassengerAssignJPanel(JPanel userProcessContainer, UserAccount account,PassengerOrganization passengerOrganization , EcoSystem business) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.passengerOrganization=passengerOrganization;
        
        populateTable();
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        
        model.setRowCount(0);
        for(WorkRequest request : passengerOrganization.getWorkQueue().getWorkRequestList()){
            
             if (request instanceof CarTestWorkRequest){
           
            Object[] row = new Object[5];
            row[0] = request;
            row[1] = request.getSender().getEmployee().getName();
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[3] = request.getStatus();
             Car CarName=((CarTestWorkRequest) request).getCar();
            row[4]=CarName;
            
            model.addRow(row);
             }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        assignJButton = new javax.swing.JButton();
        processJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        viewDetailsjButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        notificationsjLabel = new javax.swing.JLabel();
        CarSourcejTextField = new javax.swing.JTextField();
        CarDestinationjTextField = new javax.swing.JTextField();
        CarCostjTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        notificationsJTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        backjButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Sender", "Car Driver Name", "Passenger", "Status", "Car Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);
        if (workRequestJTable.getColumnModel().getColumnCount() > 0) {
            workRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 640, 100));

        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, -1, -1));

        processJButton.setText("Process");
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });
        add(processJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 260, -1, -1));

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 260, -1, -1));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Car Information:-");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, -1, -1));

        viewDetailsjButton.setText("View");
        viewDetailsjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailsjButtonActionPerformed(evt);
            }
        });
        add(viewDetailsjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 260, 100, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Car Details:-");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 340, -1, -1));

        jLabel3.setText("Source");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 380, -1, -1));

        jLabel4.setText("Destination");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 420, -1, -1));

        notificationsjLabel.setText("Notifications");
        add(notificationsjLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 500, -1, -1));

        CarSourcejTextField.setEditable(false);
        add(CarSourcejTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 370, 150, -1));

        CarDestinationjTextField.setEditable(false);
        CarDestinationjTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CarDestinationjTextFieldActionPerformed(evt);
            }
        });
        add(CarDestinationjTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 410, 150, -1));

        CarCostjTextField.setEditable(false);
        add(CarCostjTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 450, 150, -1));
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 150, -1, -1));

        notificationsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "DateTime", "Type", "Message"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(notificationsJTable);
        if (notificationsJTable.getColumnModel().getColumnCount() > 0) {
            notificationsJTable.getColumnModel().getColumn(0).setMinWidth(150);
            notificationsJTable.getColumnModel().getColumn(0).setPreferredWidth(150);
            notificationsJTable.getColumnModel().getColumn(0).setMaxWidth(150);
            notificationsJTable.getColumnModel().getColumn(1).setMinWidth(100);
            notificationsJTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            notificationsJTable.getColumnModel().getColumn(1).setMaxWidth(100);
            notificationsJTable.getColumnModel().getColumn(2).setMinWidth(450);
            notificationsJTable.getColumnModel().getColumn(2).setPreferredWidth(450);
            notificationsJTable.getColumnModel().getColumn(2).setMaxWidth(450);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 520, 620, 100));

        jLabel7.setText("Cost");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 460, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon("C:\\Users\\anita\\Desktop\\Project\\car-logo-hi.png")); // NOI18N
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 760, 590));

        backjButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        backjButton1.setText("<< Back");
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });
        add(backjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 490, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();
        
        if (selectedRow < 0){
            return;
        }
        
        WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Pending");
        updateBookingStats();
        populateTable();
        
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void updateBookingStats() {
        Map<String, Object> stats = this.business.getStats("stats.bookings");
        Integer count;
        if ((count = (Integer) stats.get("passenger.count.car")) == null) {
            count = 0;
        }
        stats.put("passenger.count.car", ++count);
    }
    
    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed
        
        int selectedRow = workRequestJTable.getSelectedRow();
        
        if (selectedRow < 0){
            return;
        }
        
        CarTestWorkRequest request = (CarTestWorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
     
        request.setStatus("Processing");
        
        ProcessWorkRequestJPanel1 processWorkRequestJPanel = new ProcessWorkRequestJPanel1(userProcessContainer, request);
        userProcessContainer.add("processWorkRequestJPanel", processWorkRequestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_processJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void viewDetailsjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailsjButtonActionPerformed

        int selectedRow =workRequestJTable.getSelectedRow();
        if (selectedRow < 0){
            return;
        }

        WorkRequest request =  (WorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
        System.out.println(request.getReceiver());
        CarTestWorkRequest labTestWorkRequest = (CarTestWorkRequest) request;
        CarSourcejTextField.setText(labTestWorkRequest.getCar().getSource());
        CarDestinationjTextField.setText(labTestWorkRequest.getCar().getDestination());
        CarCostjTextField.setText(String.valueOf(labTestWorkRequest.getCar().getCost()));
        
        populateNotificationsTable(labTestWorkRequest.getCar());
    }//GEN-LAST:event_viewDetailsjButtonActionPerformed

    private void populateNotificationsTable(Car car) {
        DefaultTableModel model = (DefaultTableModel) notificationsJTable.getModel();
        model.setRowCount(0);
        
        String notificationCategory = String.format("car.%s-%s.driver", car.getCarCode(), car.getName());
        List<EcoSystem.Notification> notifications = this.business.getNotifications(notificationCategory);
        Collections.sort(notifications, new Comparator<EcoSystem.Notification>() {
            @Override
            public int compare(EcoSystem.Notification n1, EcoSystem.Notification n2) {
                // desc order
                return -1*n1.getDate().compareTo(n2.getDate());
            }
        });
        for(EcoSystem.Notification notification : notifications) {
            Object[] row = new Object[3];
            row[0] = notification.getDateAsString();
            row[1] = notification.getType();
            row[2] = notification.getMessage();
            model.addRow(row);
        }
    }
    
    private void CarDestinationjTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CarDestinationjTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CarDestinationjTextFieldActionPerformed

    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed
        // TODO add your handling code here:

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CarCostjTextField;
    private javax.swing.JTextField CarDestinationjTextField;
    private javax.swing.JTextField CarSourcejTextField;
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton backjButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable notificationsJTable;
    private javax.swing.JLabel notificationsjLabel;
    private javax.swing.JButton processJButton;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton viewDetailsjButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
